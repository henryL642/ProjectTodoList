import type { Todo } from './todo'
import type { TaskPriority, DistributionStrategyType } from './scheduling'

/**
 * 擴展的番茄鐘任務類型
 * 基於現有Todo類型，添加智慧排程功能
 */
export interface PomodoroTask extends Todo {
  // 時間估算
  estimatedPomodoros: number     // 預估番茄鐘數量
  completedPomodoros: number     // 已完成番茄鐘數量
  
  // 智慧分配
  isAutoScheduled: boolean       // 是否啟用自動排程
  scheduledSlots: ScheduledSlot[] // 排程時間段
  
  // 子任務分解
  subtasks: PomodoroSubtask[]    // 子任務列表
  isSubdivided: boolean          // 是否已分解
  
  // 排程元數據
  lastScheduled?: Date           // 上次排程時間
  schedulingStrategy?: DistributionStrategyType // 使用的分配策略
}

/**
 * 排程時間段
 * 表示任務在特定時間的分配
 */
export interface ScheduledSlot {
  id: string
  taskId: string
  subtaskId?: string
  userId: string
  
  // 時間配置
  date: Date                     // 排程日期
  startTime: string             // 開始時間 (HH:mm)
  endTime: string               // 結束時間 (HH:mm)
  pomodoroCount: number         // 此時段的番茄鐘數量
  
  // 狀態追蹤
  status: ScheduledSlotStatus
  actualStartTime?: Date        // 實際開始時間
  actualEndTime?: Date          // 實際結束時間
  completedPomodoros: number    // 已完成番茄鐘數量
  
  // 排程屬性
  isFlexible: boolean           // 是否允許調整
  priority: TaskPriority        // 優先級
  autoGenerated: boolean        // 是否自動生成
  
  // 元數據
  createdAt: Date
  updatedAt: Date
}

/**
 * 子任務結構
 * 支援任務分解和獨立排程
 */
export interface PomodoroSubtask {
  id: string
  parentTaskId: string
  name: string
  description?: string
  
  // 時間分配
  estimatedPomodoros: number
  completedPomodoros: number
  
  // 排程資訊
  scheduledSlots: ScheduledSlot[]
  dueDate?: Date
  priority: TaskPriority
  
  // 狀態
  status: SubtaskStatus
  progress: number              // 完成百分比 (0-100)
  
  // 分解資訊
  order: number                 // 執行順序
  dependencies: string[]        // 依賴的子任務ID
  
  // 元數據
  createdAt: Date
  updatedAt: Date
}


/**
 * 排程時間段狀態
 */
export type ScheduledSlotStatus = 
  | 'scheduled'     // 已排程
  | 'in_progress'   // 進行中
  | 'completed'     // 已完成
  | 'skipped'       // 已跳過
  | 'cancelled'     // 已取消
  | 'overdue'       // 已逾期

/**
 * 子任務狀態
 */
export type SubtaskStatus = 
  | 'pending'       // 待處理
  | 'in_progress'   // 進行中
  | 'completed'     // 已完成
  | 'blocked'       // 被阻擋
  | 'cancelled'     // 已取消


/**
 * 任務複雜度分析
 */
export interface TaskComplexity {
  score: number                 // 複雜度分數 (0-1)
  factors: {
    estimatedTime: number       // 時間因子
    dependencies: number        // 依賴複雜度
    skillRequirement: number    // 技能要求
    uncertainty: number         // 不確定性
  }
  category: 'simple' | 'moderate' | 'complex' | 'expert'
  suggestions: string[]         // 建議
}

/**
 * 用戶排程偏好
 */
export interface UserSchedulingPreferences {
  userId: string
  
  // 工作模式偏好
  preferredDistributionStrategy: DistributionStrategyType
  maxDailyPomodoros: number     // 每日最大番茄鐘數
  preferredWorkingHours: {
    start: string               // 偏好開始時間
    end: string                 // 偏好結束時間
  }
  
  // 分解偏好
  autoBreakdownThreshold: number // 自動分解閾值
  preferredSubtaskSize: number   // 偏好子任務大小
  
  // 彈性設定
  allowOvertimeScheduling: boolean
  flexibilityLevel: 'strict' | 'moderate' | 'flexible'
  bufferTimePercentage: number   // 緩衝時間百分比
  
  // 通知偏好
  reminderSettings: {
    beforeStart: number         // 開始前提醒（分鐘）
    duringWork: boolean         // 工作中提醒
    afterCompletion: boolean    // 完成後提醒
  }
  
  // 更新時間
  updatedAt: Date
}

/**
 * 排程統計
 */
export interface SchedulingStats {
  userId: string
  period: {
    start: Date
    end: Date
  }
  
  // 完成統計
  totalPomodoros: number
  completedPomodoros: number
  completionRate: number        // 完成率百分比
  
  // 時間統計
  totalScheduledMinutes: number
  actualWorkMinutes: number
  averagePomodoroLength: number
  
  // 效率指標
  onTimeCompletionRate: number  // 按時完成率
  capacityUtilization: number   // 容量利用率
  taskBreakdownEffectiveness: number // 任務分解有效性
  
  // 模式分析
  mostProductiveTimeSlots: string[] // 最高效時段
  preferredDistributionPattern: DistributionStrategyType
  averageTaskComplexity: number
}

/**
 * 排程衝突
 */
export interface SchedulingConflict {
  id: string
  type: ConflictType
  severity: 'low' | 'medium' | 'high' | 'critical'
  
  // 衝突詳情
  conflictingSlots: ScheduledSlot[]
  affectedTasks: string[]       // 受影響的任務ID
  description: string
  
  // 解決方案
  suggestedResolutions: ConflictResolution[]
  autoResolvable: boolean
  
  // 元數據
  detectedAt: Date
  resolvedAt?: Date
}

/**
 * 衝突類型
 */
export type ConflictType = 
  | 'time_overlap'      // 時間重疊
  | 'capacity_exceeded' // 容量超出
  | 'dependency_cycle'  // 依賴循環
  | 'deadline_conflict' // 截止日期衝突
  | 'resource_conflict' // 資源衝突

/**
 * 衝突解決方案
 */
export interface ConflictResolution {
  id: string
  conflictId: string
  type: ResolutionType
  title: string
  description: string
  
  // 影響評估
  impact: {
    affectedSlots: number
    timeChange: number          // 時間變化（分鐘）
    priorityChange: boolean     // 是否影響優先級
  }
  
  // 解決方案詳情
  actions: ResolutionAction[]
  estimatedEffort: number       // 預估調整工作量
  confidence: number            // 成功信心度 (0-1)
  
  // 選擇狀態
  isSelected: boolean
  appliedAt?: Date
}

/**
 * 解決方案類型
 */
export type ResolutionType = 
  | 'reschedule'        // 重新排程
  | 'split_task'        // 分割任務
  | 'adjust_capacity'   // 調整容量
  | 'change_priority'   // 變更優先級
  | 'use_overtime'      // 使用加班時間
  | 'extend_deadline'   // 延長截止日期

/**
 * 解決方案行動
 */
export interface ResolutionAction {
  type: 'move_slot' | 'split_slot' | 'adjust_duration' | 'change_priority'
  targetId: string              // 目標對象ID
  parameters: Record<string, any> // 行動參數
  description: string
}

/**
 * 排程變更記錄
 */
export interface ScheduleChange {
  id: string
  taskId: string
  changeType: ScheduleChangeType
  
  // 變更詳情
  oldValue: any
  newValue: any
  reason: string
  
  // 影響分析
  impact: ChangeImpact
  
  // 元數據
  userId: string
  timestamp: Date
  source: 'user' | 'system' | 'algorithm'
}

/**
 * 排程變更類型
 */
export type ScheduleChangeType = 
  | 'task_created'      // 任務創建
  | 'task_updated'      // 任務更新
  | 'task_completed'    // 任務完成
  | 'slot_moved'        // 時間段移動
  | 'slot_resized'      // 時間段調整
  | 'deadline_changed'  // 截止日期變更
  | 'priority_changed'  // 優先級變更
  | 'subtask_added'     // 子任務添加

/**
 * 變更影響分析
 */
export interface ChangeImpact {
  severity: 'minor' | 'moderate' | 'major' | 'critical'
  affectedSlots: number
  affectedTasks: number
  requiresReschedule: boolean
  estimatedAdjustmentTime: number // 預估調整時間（分鐘）
}